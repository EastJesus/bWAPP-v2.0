import React, { Component } from "react";

class Exp extends Component {
  render() {
    return (
      <div className="main">
        <h3>Эксплуатация уязвимости</h3>
        <p>
          Любую систему можно начать проверять самым простым способом -
          перебором паролей. Если в системе не реализована многофакторная
          аутентификация, интервал между попытками входа, защита от атак
          перебором, то с помощью спициальных программ можно "брутфорсить"
          неограниченное количество времени, пока нужна связка логин-пароль не
          будут найдены.
        </p>
        <p>
          С помощью специального скрипта можно проверить текущую систему. Для
          этого нужно перейти в папку "forStudents", запустить в ней терминал и
          выполнить команду <b>node brutAuth.js</b>
        </p>
        <p>
          Данная команда выполнить специальный скрипт - скраппер, написанный на
          фреймворке <a
            href="https://medium.com/web-standards/puppeteer-crawl-to-markdown-7752dff36b68"
            target="_blank"
          >Puppeteer</a>. Этот скрипт запускает браузер, заходит на страницу приложения,
          считывает логины и пароли из заранее подготовленных файлов и по
          очереди подставляет их в поля ввода, пытаясь осуществить вход в
          систему. Если попытка успешна, данная связка логин-пароль записывается
          в файл success.txt, который находится в этой же папке.
        </p>
        <p>
          Такие популярные связки логин-пароль легко найти в интернете, например <a href="https://itsecforu.ru/2018/11/16/%D0%B1%D0%BE%D0%BB%D1%8C%D1%88%D0%B8%D0%B5-%D1%81%D0%BF%D0%B8%D1%81%D0%BA%D0%B8-%D0%BF%D0%B0%D1%80%D0%BE%D0%BB%D0%B5%D0%B9-%D0%B4%D0%BB%D1%8F-%D0%B1%D1%80%D1%83%D1%82%D1%84%D0%BE%D1%80%D1%81%D0%B0/">
          здесь.
          </a>
        </p>
      </div>
    );
  }
}

export default Exp
