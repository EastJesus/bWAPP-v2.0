import React, { Component } from "react";
import RaisedButton from 'material-ui/RaisedButton';
import TextField from "material-ui/TextField";
import Swal from 'sweetalert2'
import InputMask from 'react-input-mask';
import { Link, withRouter } from "react-router-dom";

var numeral = require('numeral');

class Exp extends Component {
    constructor(props) {
        super(props)
        this.state = {
          cardNumber: null,
          balance: 56700,
          sum: null,
          formattedSum: null
        }
      }
    
      refreshCard = (event) => {
        this.setState({
          cardNumber: event.target.value
        })
        document.querySelector('.auth_login label').innerText = ''
        console.log(this.state.cardNumber)
      }
    
      refreshSum = (event) => {
        this.setState({
          formattedSum: event.target.value
        })
        this.setState({
          sum: event.target.value.replace( /,/g, "")
        })
        console.log(this.state.sum)
      }
    
      send = () => {
        let searchSum = new URLSearchParams(this.props.location.search).get("sum")
        let cardNumber = new URLSearchParams(this.props.location.search).get("card")
        if(searchSum) {
          this.setState({
            sum: searchSum,
            cardNumber: cardNumber
          })
        }
        this.setState({
          balance: this.state.balance - searchSum
        })
        this.showBalance(searchSum, cardNumber)
        this.setState({
          formattedSum: null,
          sum: null,
          cardNumber: null
        })
    
        this.resetFields()
      }
    
      showBalance = (searchSum, cardNumber) => {
        Swal.fire({
          type: 'success',
          title: 'Перевод выполнен',
          text: `Вы успешно перевели ${searchSum ? searchSum : this.state.sum} ₽ 
                 на номер получателя ${cardNumber ? cardNumber : this.state.cardNumber}`,
          footer: `На счету осталось ${this.state.balance - (searchSum ? searchSum : this.state.sum)} ₽`
        })
      }
    
      resetFields = () => {
        document.querySelector('.auth_login input').value = ''
        document.querySelector('.auth_password input').value = ''
      }
    
      componentDidMount() {
        console.log('propes')
        console.log(this.props)
        if(new URLSearchParams(this.props.location.search).get("sum")) {
          this.send()
        }
      }
    
      render() {
        return (
          <div className="CSRF">
            <div className="transaction">
              <div className="auth-header" />
              <div className="auth-body">
                <p className="balance">Ваш баланс: {numeral(this.state.balance).format('0,0')} ₽</p>
                <TextField
                  floatingLabelText="Номер карты получателя"
                  onChange={this.refreshCard}
                  className="auth_login"
                >
                  <InputMask
                    onChange={this.refreshCard}
                    {...this.props} mask="\ 9999 9999 9999 9999" maskChar=" "
                  />
                </TextField>
                <TextField
                  hintText="Сумма перевода"
                  floatingLabelText="Введите сумму перевода"
                  onChange={this.refreshSum}
                  className="auth_password"
                  value={this.state.formattedSum ? numeral(this.state.formattedSum).format('0,0') : this.state.formattedSum}
                >
                </TextField>
                <RaisedButton
                  className="eventButton"
                  label="Перевести"
                  primary={true}
                  onClick={() => {this.props.history.push(`CSRF?sum=${this.state.sum}&card=${this.state.balance}`); window.location.reload()}}
                />
              </div>
              <div className="auth-footer" />
            </div>
          </div>
        );
      }
}

export default Exp